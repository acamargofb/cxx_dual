#  (C) Copyright Edward Diener 2015-2016
#  Use, modification and distribution are subject to the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt).
#
# Cxx_dual testing Jamfile
#

import testing ;
import ../../predef/check/predef
    : check require
    : predef-check predef-require ;

project cxxd_tests : requirements <warnings>on
                                  <test-info>always_show_run_output
                                  <toolset>msvc:<warnings>all
                                  <toolset>intel-linux:<cxxflags>-std=c++11
                                  <toolset>clang-linux:<cxxflags>-std=c++11
                                  <toolset>clang-linux:<cxxflags>-pedantic-errors
                                  <toolset>gcc:<warnings>all
                                  <toolset>gcc:<cxxflags>-pedantic-errors
                                  [ predef-check "BOOST_COMP_GNUC >= 4.7.4" : : <cxxflags>-ftrack-macro-expansion=0 ]
                                  [ predef-check "BOOST_COMP_GNUC >= 4.3.0" : : <cxxflags>-Wno-variadic-macros ]
                                  <toolset>gcc-4.3.0:<cxxflags>-U__STRICT_ANSI__
                                  <toolset>gcc-4.4.0:<cxxflags>-U__STRICT_ANSI__
                                  <toolset>gcc-4.5.2:<linkflags>"-Wl,--enable-auto-import"
                                  ;
                                                 
local l_gcc_c11 = [ predef-check "BOOST_COMP_GNUC >= 4.3" "BOOST_OS_QNX == 0" : : <cxxflags>-std=c++0x ] ;

test-suite cxxd_data
    : 
       [ run test_all.cpp  : : : $(l_gcc_c11) ]
       [ run test_library_name.cpp : : : $(l_gcc_c11) ]
       [ run test_valid_variants.cpp : : : $(l_gcc_c11) ]
    ;
