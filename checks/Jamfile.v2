#  (C) Copyright Edward Diener 2016
#  Use, modification and distribution are subject to the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt).

rule cxxd-run-simple ( requirements * : target-name )
{
   obj $(target-name)_obj : cxxd_check.cpp : $(requirements) ;
   explicit $(target-name)_obj ;
#   unit-test $(target-name) : $(target-name)_obj : $(requirements) ;
   unit-test $(target-name) : $(target-name)_obj ;
   explicit $(target-name) ;
}

cxxd-run-simple <define>CXXD_TEST_ARRAY <define>CXXD_TEST_IMPL=0 : cxxd_array_boost ;
cxxd-run-simple <define>CXXD_TEST_ATOMIC <define>CXXD_TEST_IMPL=0 : cxxd_atomic_boost ;
cxxd-run-simple <define>CXXD_TEST_BIND <define>CXXD_TEST_IMPL=0 : cxxd_bind_boost ;
cxxd-run-simple <define>CXXD_TEST_CHRONO <define>CXXD_TEST_IMPL=0 : cxxd_chrono_boost ;
cxxd-run-simple <define>CXXD_TEST_CONDITION_VARIABLE <define>CXXD_TEST_IMPL=0 : cxxd_condition_variable_boost ;
cxxd-run-simple <define>CXXD_TEST_ENABLE_SHARED_FROM_THIS <define>CXXD_TEST_IMPL=0 : cxxd_enable_shared_from_this_boost ;
cxxd-run-simple <define>CXXD_TEST_FUNCTION <define>CXXD_TEST_IMPL=0 : cxxd_function_boost ;
cxxd-run-simple <define>CXXD_TEST_HASH <define>CXXD_TEST_IMPL=0 : cxxd_hash_boost ;
cxxd-run-simple <define>CXXD_TEST_MAKE_SHARED <define>CXXD_TEST_IMPL=0 : cxxd_make_shared_boost ;
cxxd-run-simple <define>CXXD_TEST_MEM_FN <define>CXXD_TEST_IMPL=0 : cxxd_mem_fn_boost ;
cxxd-run-simple <define>CXXD_TEST_MOVE <define>CXXD_TEST_IMPL=0 : cxxd_move_boost ;
cxxd-run-simple <define>CXXD_TEST_MUTEX <define>CXXD_TEST_IMPL=0 : cxxd_mutex_boost ;
cxxd-run-simple <define>CXXD_TEST_RANDOM <define>CXXD_TEST_IMPL=0 : cxxd_random_boost ;
cxxd-run-simple <define>CXXD_TEST_RATIO <define>CXXD_TEST_IMPL=0 : cxxd_ratio_boost ;
cxxd-run-simple <define>CXXD_TEST_REF <define>CXXD_TEST_IMPL=0 : cxxd_ref_boost ;
cxxd-run-simple <define>CXXD_TEST_REGEX <define>CXXD_TEST_IMPL=0 : cxxd_regex_boost ;
cxxd-run-simple <define>CXXD_TEST_SHARED_MUTEX <define>CXXD_TEST_IMPL=0 : cxxd_shared_mutex_boost ;
cxxd-run-simple <define>CXXD_TEST_SHARED_PTR <define>CXXD_TEST_IMPL=0 : cxxd_shared_ptr_boost ;
cxxd-run-simple <define>CXXD_TEST_SYSTEM_ERROR <define>CXXD_TEST_IMPL=0 : cxxd_system_error_boost ;
cxxd-run-simple <define>CXXD_TEST_THREAD <define>CXXD_TEST_IMPL=0 : cxxd_thread_boost ;
cxxd-run-simple <define>CXXD_TEST_TUPLE <define>CXXD_TEST_IMPL=0 : cxxd_tuple_boost ;
cxxd-run-simple <define>CXXD_TEST_TYPE_INDEX <define>CXXD_TEST_IMPL=0 : cxxd_type_index_boost ;
cxxd-run-simple <define>CXXD_TEST_TYPE_TRAITS <define>CXXD_TEST_IMPL=0 : cxxd_type_traits_boost ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MAP <define>CXXD_TEST_IMPL=0 : cxxd_unordered_map_boost ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MULTIMAP <define>CXXD_TEST_IMPL=0 : cxxd_unordered_multimap_boost ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MULTISET <define>CXXD_TEST_IMPL=0 : cxxd_unordered_multiset_boost ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_SET <define>CXXD_TEST_IMPL=0 : cxxd_unordered_set_boost ;
cxxd-run-simple <define>CXXD_TEST_WEAK_PTR <define>CXXD_TEST_IMPL=0 : cxxd_weak_ptr_boost ;

cxxd-run-simple <define>CXXD_TEST_ARRAY <define>CXXD_TEST_IMPL=1 : cxxd_array_std ;
cxxd-run-simple <define>CXXD_TEST_ATOMIC <define>CXXD_TEST_IMPL=1 : cxxd_atomic_std ;
cxxd-run-simple <define>CXXD_TEST_BIND <define>CXXD_TEST_IMPL=1 : cxxd_bind_std ;
cxxd-run-simple <define>CXXD_TEST_CHRONO <define>CXXD_TEST_IMPL=1 : cxxd_chrono_std ;
cxxd-run-simple <define>CXXD_TEST_CONDITION_VARIABLE <define>CXXD_TEST_IMPL=1 : cxxd_condition_variable_std ;
cxxd-run-simple <define>CXXD_TEST_ENABLE_SHARED_FROM_THIS <define>CXXD_TEST_IMPL=1 : cxxd_enable_shared_from_this_std ;
cxxd-run-simple <define>CXXD_TEST_FUNCTION <define>CXXD_TEST_IMPL=1 : cxxd_function_std ;
cxxd-run-simple <define>CXXD_TEST_HASH <define>CXXD_TEST_IMPL=1 : cxxd_hash_std ;
cxxd-run-simple <define>CXXD_TEST_MAKE_SHARED <define>CXXD_TEST_IMPL=1 : cxxd_make_shared_std ;
cxxd-run-simple <define>CXXD_TEST_MEM_FN <define>CXXD_TEST_IMPL=1 : cxxd_mem_fn_std ;
cxxd-run-simple <define>CXXD_TEST_MOVE <define>CXXD_TEST_IMPL=1 : cxxd_move_std ;
cxxd-run-simple <define>CXXD_TEST_MUTEX <define>CXXD_TEST_IMPL=1 : cxxd_mutex_std ;
cxxd-run-simple <define>CXXD_TEST_RANDOM <define>CXXD_TEST_IMPL=1 : cxxd_random_std ;
cxxd-run-simple <define>CXXD_TEST_RATIO <define>CXXD_TEST_IMPL=1 : cxxd_ratio_std ;
cxxd-run-simple <define>CXXD_TEST_REF <define>CXXD_TEST_IMPL=1 : cxxd_ref_std ;
cxxd-run-simple <define>CXXD_TEST_REGEX <define>CXXD_TEST_IMPL=1 : cxxd_regex_std ;
cxxd-run-simple <define>CXXD_TEST_SHARED_MUTEX <define>CXXD_TEST_IMPL=1 : cxxd_shared_mutex_std ;
cxxd-run-simple <define>CXXD_TEST_SHARED_PTR <define>CXXD_TEST_IMPL=1 : cxxd_shared_ptr_std ;
cxxd-run-simple <define>CXXD_TEST_SYSTEM_ERROR <define>CXXD_TEST_IMPL=1 : cxxd_system_error_std ;
cxxd-run-simple <define>CXXD_TEST_THREAD <define>CXXD_TEST_IMPL=1 : cxxd_thread_std ;
cxxd-run-simple <define>CXXD_TEST_TUPLE <define>CXXD_TEST_IMPL=1 : cxxd_tuple_std ;
cxxd-run-simple <define>CXXD_TEST_TYPE_INDEX <define>CXXD_TEST_IMPL=1 : cxxd_type_index_std ;
cxxd-run-simple <define>CXXD_TEST_TYPE_TRAITS <define>CXXD_TEST_IMPL=1 : cxxd_type_traits_std ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MAP <define>CXXD_TEST_IMPL=1 : cxxd_unordered_map_std ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MULTIMAP <define>CXXD_TEST_IMPL=1 : cxxd_unordered_multimap_std ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_MULTISET <define>CXXD_TEST_IMPL=1 : cxxd_unordered_multiset_std ;
cxxd-run-simple <define>CXXD_TEST_UNORDERED_SET <define>CXXD_TEST_IMPL=1 : cxxd_unordered_set_std ;
cxxd-run-simple <define>CXXD_TEST_WEAK_PTR <define>CXXD_TEST_IMPL=1 : cxxd_weak_ptr_std ;
